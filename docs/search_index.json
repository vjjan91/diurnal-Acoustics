[["index.html", "Source code and supporting information for Drivers of diurnal variation in vocal activity in a tropical bird community Section 1 Introduction 1.1 Attribution 1.2 Data access 1.3 Data processing", " Source code and supporting information for Drivers of diurnal variation in vocal activity in a tropical bird community Vijay Ramesh Pavithra Sundar Meghana P Srivathsa Laurel Symes Last compiled on 20 May, 2025 Section 1 Introduction This is the readable version that showcases analyses examining the drivers of diurnal variation in vocal activity for a tropical bird community. 1.1 Attribution Please contact the following in case of interest in the project. Vijay Ramesh (repo maintainer) Postdoctoral Research Associate, Cornell Lab of Ornithology 1.2 Data access The data used in this work will be archived on Zenodo. 1.3 Data processing The data processing for this project is described in the following sections. Navigate through them using the links in the sidebar. "],["data-cleaning.html", "Section 2 Data cleaning 2.1 Install required libraries 2.2 Loading acoustic data 2.3 Add standardized eBird species codes for future analysis 2.4 How much data has been annotated for dawn and dusk across sites and days? 2.5 More data cleaning 2.6 Write to file", " Section 2 Data cleaning In this script, we will ensure that the data is cleaned, and we create a single sheet for annotations at dawn and another sheet for annotations at dusk. 2.1 Install required libraries library(tidyverse) library(dplyr) library(stringr) library(vegan) library(ggplot2) library(scico) library(data.table) library(extrafont) library(sf) library(raster) # for plotting library(scales) library(ggplot2) library(ggspatial) library(colorspace) 2.2 Loading acoustic data The acoustic data consists of annotations of 10-s chunks of audio files across summer and winter months. We will load annotation datasets for both dawn and dusk and process them further to ensure that we can quickly extract measures of vocal activity in future scripts. For the sake of future analysis, we define dawn as periods of acoustic data annotated between 6am and 10am. We define dusk as periods of acoustic data annotated between 4pm to 7pm (Please note that in future scripts, we subsample the data to ensure that uniform sampling periods are being compared across dawn and dusk). # These dawn and dusk annotation .csvs are not uploaded to GitHub and can be provided upon request # Please write to Vijay Ramesh if you would like to access the raw data - vr292@cornell.edu) # However, all outputs emerging from this script, which includes processed annotations are public and can be used for analysis # dawn data summer_dawn &lt;- read.csv(&quot;data/summer-dawn-annotations.csv&quot;) winter_dawn &lt;- read.csv(&quot;data/winter-dawn-annotations.csv&quot;) dawn &lt;- bind_rows(summer_dawn, winter_dawn) names(dawn) # reorder columns to ensure the species codes appear one after another dawn &lt;- dawn %&gt;% relocate(c(&quot;BFOW&quot;, &quot;SBEO&quot;, &quot;JUNI&quot;, &quot;ASKO&quot;, &quot;HSWO&quot;), .after = &quot;CORO&quot;) # split the filename column into 4 columns : site, date, time and splits dawn &lt;- separate(dawn, col = Filename, into = c(&quot;site_id&quot;, &quot;date&quot;, &quot;time&quot;, &quot;splits&quot;), sep = &quot;_&quot;) %&gt;% dplyr::select(-(Birds:Notes)) %&gt;% # remove columns not required &amp; rename rename(., restoration_type = Restoration.Type..Benchmark.Active.Passive.) %&gt;% rename(., time_of_day = Time..Morning.Evening.Night.) %&gt;% mutate(time_of_day = &quot;dawn&quot;) # dusk data summer_dusk &lt;- read.csv(&quot;data/summer-dusk-annotations.csv&quot;) winter_dusk &lt;- read.csv(&quot;data/winter-dusk-annotations.csv&quot;) dusk &lt;- bind_rows(summer_dusk, winter_dusk) names(dusk) # reorder columns to ensure the species codes appear one after another dusk &lt;- dusk %&gt;% relocate(&quot;GREN&quot;, .after = &quot;CORO&quot;) # split the filename column into 4 columns : site, date, time and splits dusk &lt;- separate(dusk, col = Filename, into = c(&quot;site_id&quot;, &quot;date&quot;, &quot;time&quot;, &quot;splits&quot;), sep = &quot;_&quot;) %&gt;% dplyr::select(-(Birds:Notes)) %&gt;% # remove columns not required &amp; rename rename(., restoration_type = Restoration.Type..Benchmark.Active.Passive.) %&gt;% rename(., time_of_day = Time..Morning.Evening.Night.) %&gt;% mutate(time_of_day = &quot;dusk&quot;) # create a single dataframe acoustic_data &lt;- bind_rows(dawn, dusk) 2.3 Add standardized eBird species codes for future analysis species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) ## Using the splice operator from an example on stackOverflow ## https://stackoverflow.com/questions/60113369/change-column-names-in-dataframe-based-on-matching-to-another-dataframe-by-dplyr eBirdCodes &lt;- species_codes %&gt;% dplyr::select(eBird_codes, species_annotation_codes) %&gt;% deframe() # replace current annotation codes with eBird codes acoustic_data &lt;- acoustic_data %&gt;% rename(!!!eBirdCodes) 2.4 How much data has been annotated for dawn and dusk across sites and days? # we observe that OLCAP5B has the least amount of data annotated (~3 unique days/visits) at dawn dawnSampling &lt;- acoustic_data %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% dplyr::select(site_id, date) %&gt;% distinct() %&gt;% arrange(site_id) %&gt;% count(site_id) # we observe that OLCAP5B has the least amount of data annotated (~3 unique visits) duskSampling &lt;- acoustic_data %&gt;% filter(time_of_day == &quot;dusk&quot;) %&gt;% dplyr::select(site_id, date) %&gt;% distinct() %&gt;% arrange(site_id) %&gt;% count(site_id) 2.5 More data cleaning Removing NAs and renaming columns # Here, we pivot the data to long format and remove NA/zero values or missing data acoustic_data &lt;- acoustic_data %&gt;% group_by(site_id, date, time, splits, time_of_day, restoration_type) %&gt;% transform() %&gt;% replace(is.na(.), 0) %&gt;% summarise_at(.vars = vars(c(&quot;compea&quot;:&quot;grenig1&quot;)), .funs = sum) %&gt;% pivot_longer(cols = compea:grenig1, names_to = &quot;eBird_codes&quot;, values_to = &quot;number&quot;) %&gt;% filter(number != 0) # one way to remove zeros # rename the `time` column as `start_time` to distinguish from `time_of_day` acoustic_data &lt;- acoustic_data %&gt;% rename(., start_time = time) # add hourOfDay column to indicate time-windows for when the acoustic-visit was started acoustic_data &lt;- acoustic_data %&gt;% mutate( hour_of_day = case_when( start_time &gt;= &quot;060000&quot; &amp; start_time &lt; &quot;070000&quot; ~ &quot;6AM to 7AM&quot;, start_time &gt;= &quot;070000&quot; &amp; start_time &lt; &quot;080000&quot; ~ &quot;7AM to 8AM&quot;, start_time &gt;= &quot;080000&quot; &amp; start_time &lt; &quot;090000&quot; ~ &quot;8AM to 9AM&quot;, start_time &gt;= &quot;090000&quot; &amp; start_time &lt;= &quot;100000&quot; ~ &quot;9AM to 10AM&quot;, start_time &gt;= &quot;160000&quot; &amp; start_time &lt; &quot;170000&quot; ~ &quot;4PM to 5PM&quot;, start_time &gt;= &quot;170000&quot; &amp; start_time &lt;= &quot;180000&quot; ~ &quot;5PM to 6PM&quot;, start_time &gt;= &quot;180000&quot; &amp; start_time &lt;= &quot;190000&quot; ~ &quot;6PM to 7PM&quot; ) ) %&gt;% ungroup() # add a zero before the start_time to ensure its all 6 digits of time atleast acoustic_data &lt;- acoustic_data %&gt;% mutate(across(start_time, str_pad, width = 6, pad = &quot;0&quot;)) # keep only species that vocalize atleast across a minimum of 20 different/unique dates and times # we chose this random arbitrary threshold to include only species that are highly vocal and can be used for comparative analyses spp_subset &lt;- acoustic_data %&gt;% group_by(site_id, date, eBird_codes) %&gt;% summarise(unique_voc = sum(number)) %&gt;% ungroup() # keep only species with n &gt; 20 spp_subset &lt;- spp_subset %&gt;% group_by(eBird_codes) %&gt;% summarise(n = n()) %&gt;% filter(n &gt; 20) ## subset to only include species that were detected atleast across 20 unique data/time combinations acoustic_data &lt;- acoustic_data %&gt;% filter(eBird_codes %in% spp_subset$eBird_codes) ## Only 69 species remain after including highly vocal species alone 2.6 Write to file write.csv(acoustic_data, &quot;results/acoustic_data.csv&quot;, row.names = F) "],["vocal-activity.html", "Section 3 Vocal activity 3.1 Install necessary libraries 3.2 Load acoustic data and species scientific names data 3.3 Filtering acoustic data to ensure sampling periods are even across dawn and dusk 3.4 Vocal activity across time periods 3.5 Is overall vocal activity much higher at dawn compared to dusk, across species? 3.6 Testing for differences in acoustic detections between dawn and dusk 3.7 Figure for publication", " Section 3 Vocal activity In this script, we examine differences in vocal activity between dawn and dusk for each species. 3.1 Install necessary libraries library(tidyverse) library(dplyr) library(stringr) library(vegan) library(ggplot2) library(scico) library(data.table) library(extrafont) library(ggstatsplot) library(rstatix) 3.2 Load acoustic data and species scientific names data acoustic_data &lt;- read.csv(&quot;results/acoustic_data.csv&quot;) species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) 3.3 Filtering acoustic data to ensure sampling periods are even across dawn and dusk Since our recording schedule was uneven (6am to 10am in the morning and 4pm to 7pm in the evening), we filter acoustic data to retain recordings between 6am and 830am and recordings made between 4pm and 630pm so that the two sampling windows capture a similar amount of time right after dawn and right before dusk. dawn &lt;- acoustic_data %&gt;% group_by(time_of_day == &quot;dawn&quot;) %&gt;% filter(start_time &gt;= 060000 &amp; start_time &lt;= 083000) dusk &lt;- acoustic_data %&gt;% group_by(time_of_day == &quot;dusk&quot;) %&gt;% filter(start_time &gt;= 160000 &amp; start_time &lt;= 183000) acoustic_data &lt;- bind_rows(dawn[, -10], dusk[, -10]) 3.4 Vocal activity across time periods A number of factors need to be considered in further analysis: accounting for time_of_day, observed_identity for example. However, we run analyses that account for differences in calling activity by species for dawn and dusk. # sampling effort by time_of_day effort &lt;- acoustic_data %&gt;% dplyr::select(site_id, date, time_of_day) %&gt;% distinct() %&gt;% arrange(time_of_day) %&gt;% count(time_of_day) %&gt;% rename(., nVisits = n) # Above, we note that we had sampled ~145 site-date combinations at dawn, while ~230 site-date combinations were sampled at dusk # total number of acoustic detections summarized across every 10-s audio file # here, we estimate % detections at dawn and dusk, while accounting for sampling effort vocal_act &lt;- acoustic_data %&gt;% group_by(time_of_day, eBird_codes) %&gt;% summarise(detections = sum(number)) %&gt;% left_join(., species_codes[, c(1, 2, 5)], by = &quot;eBird_codes&quot; ) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_detections = sum(detections)) %&gt;% mutate(percent_detections = (detections / total_detections) * 100) %&gt;% ungroup() ## accouting for sampling effort and normalizing data vocal_act &lt;- vocal_act %&gt;% left_join(., effort, by = &quot;time_of_day&quot;) %&gt;% mutate(normalized_detections = detections / nVisits) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_normalized_detections = sum(normalized_detections)) %&gt;% mutate(percent_normalized_detections = (normalized_detections / total_normalized_detections) * 100) %&gt;% ungroup() %&gt;% # in our case, we have 4 species which have 100% detections in dawn, Indian blackbird, Little spiderhunter, Oriental-Magpie Robin and Purple sunbird. For these, we add a additional row specifying no detections in dusk. add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;pursun4&quot;, detections = 0, scientific_name = &quot;Cinnyris asiaticus&quot;, common_name = &quot;Purple Sunbird&quot;, total_detections = 96, percent_detections = 0, normalized_detections = 0, percent_normalized_detections = 0, nVisits = 230, total_normalized_detections = 0.6620690 ) %&gt;% add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;eurbla2&quot;, detections = 0, scientific_name = &quot;Turdus simillimus&quot;, common_name = &quot;Indian Blackbird&quot;, total_detections = 179, percent_detections = 0, normalized_detections = 0, percent_normalized_detections = 0, nVisits = 230, total_normalized_detections = 1.2344828 ) %&gt;% add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;litspi1&quot;, detections = 0, scientific_name = &quot;Arachnothera longirostra&quot;, common_name = &quot;Little Spiderhunter&quot;, total_detections = 204, percent_detections = 0, normalized_detections = 0, nVisits = 230, percent_normalized_detections = 0, total_normalized_detections = 1.4068966 ) %&gt;% add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;magrob&quot;, detections = 0, scientific_name = &quot;Copsychus saularis&quot;, common_name = &quot;Oriental Magpie-Robin&quot;, total_detections = 119, percent_detections = 0, normalized_detections = 0, nVisits = 230, percent_normalized_detections = 0, total_normalized_detections = 0.6620690 ) # for the sake of plotting, we will create a new variable vocal_act$plot_percent &lt;- ifelse(vocal_act$time_of_day == &quot;dawn&quot;, -1 * vocal_act$percent_normalized_detections, vocal_act$percent_normalized_detections ) # reordering legend appearance vocal_act$time_of_day &lt;- factor(vocal_act$time_of_day, levels = c(&quot;dawn&quot;, &quot;dusk&quot;) ) # figure of percent detections fig_percent_detections &lt;- ggplot(vocal_act, aes( x = reorder(common_name, -plot_percent), y = plot_percent, fill = time_of_day )) + geom_text(aes(label = sprintf(&quot;%.1f&quot;, abs(plot_percent))), hjust = ifelse(vocal_act$plot_percent &gt;= 0, 0, 1), size = 3 ) + geom_bar(stat = &quot;identity&quot;) + scale_fill_manual(values = c(&quot;#d95f02&quot;, &quot;#1b9e77&quot;)) + scale_y_continuous(labels = function(x) sprintf(&quot;%.1f&quot;, abs(x))) + coord_flip() + labs( y = &quot;% Vocal Activity&quot;, x = &quot;Species Common Name&quot; ) + theme_bw() + theme( text = element_text(family = &quot;Century Gothic&quot;, size = 14, face = &quot;bold&quot;), plot.title = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot; ), plot.subtitle = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;, color = &quot;#1b2838&quot; ), axis.title = element_text( family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot; ), legend.position = &quot;top&quot;, legend.title = element_blank(), legend.text = element_text(size = 10) ) ggsave(fig_percent_detections, filename = &quot;figs/fig_percentDetections_species.png&quot;, width = 14, height = 16, device = png(), units = &quot;in&quot;, dpi = 300) dev.off() Species-specific differences in vocal activity across dawn and dusk 3.5 Is overall vocal activity much higher at dawn compared to dusk, across species? fig_overall_vocal_act &lt;- vocal_act %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% ggbetweenstats( x = time_of_day, y = percent_normalized_detections, xlab = &quot;Time of Day&quot;, ylab = &quot;% Overall Vocal Activity at Dawn&quot;, pairwise.display = &quot;significant&quot;, violin.args = list(width = 0), ggplot.component = list(theme( text = element_text(family = &quot;Century Gothic&quot;, size = 14, face = &quot;bold.italic&quot;), plot.title = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot; ), plot.subtitle = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;, color = &quot;#1b2838&quot; ), axis.title = element_text( family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot; ) )) ) + coord_flip() + scale_y_reverse() + scale_color_manual(values = c(&quot;#d95f02&quot;, &quot;#1b9e77&quot;)) ## Edits made to figure to show only data for dawn (since % activity is significantly higher than dusk ggsave(fig_overall_vocal_act, filename = &quot;figs/fig_percentDetections_overall.png&quot;, width = 14, height = 7, device = png(), units = &quot;in&quot;, dpi = 300) dev.off() Overall, higher vocal activity was detected at dawn compared to dusk, across species. 3.6 Testing for differences in acoustic detections between dawn and dusk Here, we see whether there are differences in the acoustic detections for each species between dawn and dusk. stat.test &lt;- vocal_act %&gt;% pairwise_wilcox_test(percent_normalized_detections ~ time_of_day) # We observe significant differences in vocal activity across species between dawn and dusk # A tibble: 1 × 9 # .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif # &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; # detections dawn dusk 69 69 3192. 0.000549 0.000549 *** 3.7 Figure for publication # Here, we will combine the above two figures created library(patchwork) fig_vocAct &lt;- wrap_plots(fig_overall_vocal_act, fig_percent_detections, nrow = 2 ) + plot_annotation( tag_levels = &quot;a&quot;, tag_prefix = &quot;(&quot;, tag_suffix = &quot;)&quot; ) + plot_layout(heights = c(1, 8)) ggsave(fig_vocAct, filename = &quot;figs/fig01.png&quot;, width = 14, height = 20, device = png(), units = &quot;in&quot;, dpi = 300) dev.off() (a) Vocal activity was significantly higher at dawn compared to dusk across a tropical bird community in the Western Ghats. (b) Species-specific vocal activity across dawn and dusk. "],["frequency.html", "Section 4 Frequency 4.1 Install necessary libraries 4.2 Load acoustic data and species scientific names data 4.3 Filtering acoustic data to ensure sampling periods are even across dawn and dusk 4.4 Vocal activity data 4.5 Frequency data 4.6 Visualization of % detections vs. median peak frequency", " Section 4 Frequency In this script, we examine differences in vocal activity between dawn and dusk for each species as a function of frequency. The expectation is that higher frequency vocalizers would call more at dawn compared to dusk, owing to better signal transmission in the morning. 4.1 Install necessary libraries library(tidyverse) library(dplyr) library(stringr) library(vegan) library(ggplot2) library(scico) library(data.table) library(extrafont) library(ggstatsplot) library(ggpubr) library(ggrepel) 4.2 Load acoustic data and species scientific names data acoustic_data &lt;- read.csv(&quot;results/acoustic_data.csv&quot;) species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) freq &lt;- read.csv(&quot;data/frequency-data.csv&quot;) 4.3 Filtering acoustic data to ensure sampling periods are even across dawn and dusk Since our recording schedule was uneven (6am to 10am in the morning and 4pm to 7pm in the evening), we filter acoustic data to retain recordings between 6am and 830am and recordings made between 4pm and 630pm so that the two sampling windows capture a similar amount of time right after dawn and right before dusk. dawn &lt;- acoustic_data %&gt;% group_by(time_of_day == &quot;dawn&quot;) %&gt;% filter(start_time &gt;= 060000 &amp; start_time &lt;= 083000) dusk &lt;- acoustic_data %&gt;% group_by(time_of_day == &quot;dusk&quot;) %&gt;% filter(start_time &gt;= 160000 &amp; start_time &lt;= 183000) acoustic_data &lt;- bind_rows(dawn[, -10], dusk[, -10]) 4.4 Vocal activity data # sampling effort by time_of_day effort &lt;- acoustic_data %&gt;% dplyr::select(site_id, date, time_of_day) %&gt;% distinct() %&gt;% arrange(time_of_day) %&gt;% count(time_of_day) %&gt;% rename(., nVisits = n) # total number of acoustic detections summarized across every 10-s audio file # here, we estimate % detections at dawn and dusk, while accounting for sampling effort vocal_act &lt;- acoustic_data %&gt;% group_by(time_of_day, eBird_codes) %&gt;% summarise(detections = sum(number)) %&gt;% left_join(., species_codes[, c(1, 2, 5)], by = &quot;eBird_codes&quot; ) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_detections = sum(detections)) %&gt;% mutate(percent_detections = (detections / total_detections) * 100) %&gt;% ungroup() ## accouting for sampling effort and normalizing data vocal_act &lt;- vocal_act %&gt;% left_join(., effort, by = &quot;time_of_day&quot;) %&gt;% mutate(normalized_detections = detections / nVisits) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_normalized_detections = sum(normalized_detections)) %&gt;% mutate(percent_normalized_detections = (normalized_detections / total_normalized_detections) * 100) %&gt;% ungroup() 4.5 Frequency data We will extract the median peak frequency for each species. Note: For a total of 114 species, template recordings (varying from a minimum of 2 templates to 1910 templates per species) was extracted by Meghana P Srivathsa. While extracting median peak frequency, no distinction was made between songs and calls. We removed species that had very few templates (we only kept species that had a minimum of five frequency related measures). # add standardized eBird codes to the frequency data freq &lt;- left_join(freq, species_codes[c(3, 5)], by = &quot;species_annotation_codes&quot; ) # Only a total of 99 species are left after filtering species with very few templates nTemplates_5 &lt;- freq %&gt;% group_by(eBird_codes) %&gt;% count() %&gt;% filter(n &gt;= 5) %&gt;% drop_na() # left-join to remove species with less than five templates in the frequency dataset freq_5 &lt;- left_join(nTemplates_5[, 1], freq) # calculate median peak frequency median_pf &lt;- freq_5 %&gt;% group_by(eBird_codes) %&gt;% summarise(median_peak_freq = median(peak_freq_in_Hz)) ## join the frequency data to the vocal activity data voc_freq &lt;- left_join(vocal_act, median_pf, by = &quot;eBird_codes&quot;) %&gt;% drop_na() ## calculate the log of median peak frequency voc_freq &lt;- voc_freq %&gt;% mutate(log_freq = log10(median_peak_freq)) # A total of 66 species were included and three species were excluded due to lack of data. 4.6 Visualization of % detections vs. median peak frequency Here, we model the % of detections as a function of median peak frequency. ## creating two plots - one for dawn and one for dusk and using patchwork to combine them fig_freq_dawn &lt;- voc_freq %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% ggscatterstats( data = ., x = log_freq, y = percent_normalized_detections, xlab = &quot;log (Median Peak Frequency)\\n&quot;, ylab = &quot;\\n % Vocal activity at Dawn&quot;, pairwise.display = &quot;significant&quot;, package = &quot;ggsci&quot;, palette = &quot;default_jco&quot;, violin.args = list(width = 0), ggplot.component = list(theme( text = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;), plot.title = element_text( family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot; ), plot.subtitle = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;, color = &quot;#1b2838&quot; ), axis.title = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot; ) )) ) + geom_text_repel(aes(label = common_name), family = &quot;Century Gothic&quot;, fontface = &quot;italic&quot; ) fig_freq_dusk &lt;- voc_freq %&gt;% filter(time_of_day == &quot;dusk&quot;) %&gt;% ggscatterstats( data = ., x = log_freq, y = percent_normalized_detections, xlab = &quot;log (Median Peak Frequency)\\n&quot;, ylab = &quot;\\n % Vocal activity at Dusk&quot;, pairwise.display = &quot;significant&quot;, package = &quot;ggsci&quot;, palette = &quot;default_jco&quot;, violin.args = list(width = 0), ggplot.component = list(theme( text = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;), plot.title = element_text( family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot; ), plot.subtitle = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;, color = &quot;#1b2838&quot; ), axis.title = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot; ) )) ) + geom_text_repel(aes(label = common_name), family = &quot;Century Gothic&quot;, fontface = &quot;italic&quot; ) library(patchwork) fig_freq_vocAct &lt;- wrap_plots(fig_freq_dawn, fig_freq_dusk, nrow = 2 ) + plot_annotation( tag_levels = &quot;a&quot;, tag_prefix = &quot;(&quot;, tag_suffix = &quot;)&quot; ) ggsave(fig_freq_vocAct, filename = &quot;figs/fig_peakFrequency_vs_detections.png&quot;, width = 14, height = 18, device = png(), units = &quot;in&quot;, dpi = 300) dev.off() Pearson’s correlation test showed (a) no correlation between vocal activity at dawn and median peak frequency and (b) no correlation between vocal activity at dusk and median peak frequency. Both the effect sizes were not statistically significant. "],["light-availability.html", "Section 5 Light availability 5.1 Install necessary libraries 5.2 Load acoustic data and species scientific names data 5.3 Filtering acoustic data to ensure sampling periods are even across dawn and dusk 5.4 Vocal Activity 5.5 Extract light availability for each date 5.6 Model acoustic detections as a function of light availability 5.7 Visualization of timing of vocalization 5.8 %detections vs. median time to darkness", " Section 5 Light availability In this script, we examine differences in vocal activity between dawn and dusk as a function of light availability. The expectation is that species would call much earlier in the day, closer to sunrise compared to later in the day when one could spend time foraging. 5.1 Install necessary libraries library(tidyverse) library(dplyr) library(stringr) library(vegan) library(ggplot2) library(scico) library(data.table) library(extrafont) library(ggstatsplot) library(suncalc) library(lutz) library(stringr) library(ggpmisc) library(ggpubr) library(hms) library(RColorBrewer) 5.2 Load acoustic data and species scientific names data acoustic_data &lt;- read.csv(&quot;results/acoustic_data.csv&quot;) sites &lt;- read.csv(&quot;data/list-of-sites.csv&quot;) species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) 5.3 Filtering acoustic data to ensure sampling periods are even across dawn and dusk Since our recording schedule was uneven (6am to 10am in the morning and 4pm to 7pm in the evening), we filter acoustic data to retain recordings between 6am and 830am and recordings made between 4pm and 630pm so that the two sampling windows capture a similar amount of time right after dawn and right before dusk. dawn &lt;- acoustic_data %&gt;% group_by(time_of_day == &quot;dawn&quot;) %&gt;% filter(start_time &gt;= 060000 &amp; start_time &lt;= 083000) dusk &lt;- acoustic_data %&gt;% group_by(time_of_day == &quot;dusk&quot;) %&gt;% filter(start_time &gt;= 160000 &amp; start_time &lt;= 183000) acoustic_data &lt;- bind_rows(dawn[, -10], dusk[, -10]) 5.4 Vocal Activity We use normalized percent detections (percent detections which account for sampling effort) as a response variable in our PGLS analysis. # sampling effort by time_of_day effort &lt;- acoustic_data %&gt;% dplyr::select(site_id, date, time_of_day) %&gt;% distinct() %&gt;% arrange(time_of_day) %&gt;% count(time_of_day) %&gt;% rename(., nVisits = n) # Above, we note that we had sampled ~145 site-date combinations at dawn, while ~230 site-date combinations were sampled at dusk # total number of acoustic detections summarized across every 10-s audio file # here, we estimate % detections at dawn and dusk, while accounting for sampling effort vocal_act &lt;- acoustic_data %&gt;% group_by(time_of_day, eBird_codes) %&gt;% summarise(detections = sum(number)) %&gt;% left_join(., species_codes[, c(1, 2, 5)], by = &quot;eBird_codes&quot; ) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_detections = sum(detections)) %&gt;% mutate(percent_detections = (detections / total_detections) * 100) %&gt;% ungroup() ## accouting for sampling effort and normalizing data vocal_act &lt;- vocal_act %&gt;% left_join(., effort, by = &quot;time_of_day&quot;) %&gt;% mutate(normalized_detections = detections / nVisits) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_normalized_detections = sum(normalized_detections)) %&gt;% mutate(percent_normalized_detections = (normalized_detections / total_normalized_detections) * 100) %&gt;% ungroup() 5.5 Extract light availability for each date # add longitude and latitude to acoustic_data acoustic_data &lt;- left_join(acoustic_data, sites[, c(2, 4, 5)], by = &quot;site_id&quot; ) acoustic_data$date &lt;- lubridate::ymd(acoustic_data$date) names(acoustic_data)[c(10, 11)] &lt;- c(&quot;lon&quot;, &quot;lat&quot;) # find out what time zone needs to be provided for the sunlight calculations acoustic_data$tz &lt;- tz_lookup_coords( lat = acoustic_data$lat, lon = acoustic_data$lon, method = &quot;accurate&quot;, warn = FALSE ) # extract nauticalDawn, nauticalDusk, sunrise and sunset times light_data &lt;- getSunlightTimes( data = acoustic_data, keep = c( &quot;sunrise&quot;, &quot;sunset&quot;, &quot;nauticalDawn&quot;, &quot;nauticalDusk&quot; ), tz = &quot;Asia/Kolkata&quot; ) %&gt;% distinct(.) # strip dates from new columms and keep only time light_data$sunrise &lt;- as_hms(light_data$sunrise) light_data$sunset &lt;- as_hms(light_data$sunset) light_data$nauticalDawn &lt;- as_hms(light_data$nauticalDawn) light_data$nauticalDusk &lt;- as_hms(light_data$nauticalDusk) # summarize detections of species for every 15-min window acoustic_data &lt;- acoustic_data %&gt;% group_by( site_id, date, start_time, time_of_day, eBird_codes, lon, lat, hour_of_day ) %&gt;% summarise(detections = sum(number)) %&gt;% ungroup() # join the two datasets acoustic_data &lt;- left_join(acoustic_data, light_data, by = c(&quot;date&quot;, &quot;lon&quot;, &quot;lat&quot;) ) # format the start_time column in the acoustic data to keep it as the same format as light_data acoustic_data &lt;- acoustic_data %&gt;% mutate(across(start_time, str_pad, width = 6, pad = &quot;0&quot;)) acoustic_data$start_time &lt;- format(strptime(acoustic_data$start_time, format = &quot;%H%M%S&quot; ), format = &quot;%H:%M:%S&quot;) acoustic_data$start_time &lt;- as_hms(acoustic_data$start_time) # add end_times for each recording acoustic_data &lt;- acoustic_data %&gt;% mutate(end_time = start_time + dminutes(20)) acoustic_data$end_time &lt;- as_hms(acoustic_data$end_time) # subtract times from sunrise, sunset, nauticalDawn and nauticalDusk from start_time of acoustic detections acoustic_data &lt;- acoustic_data %&gt;% mutate(time_from_dawn = as.numeric((start_time - nauticalDawn), units = &quot;hours&quot; )) %&gt;% mutate(time_from_sunrise = as.numeric((start_time - sunrise), units = &quot;hours&quot; )) %&gt;% mutate(time_to_dusk = as.numeric((nauticalDusk - end_time), units = &quot;hours&quot; )) %&gt;% mutate(time_to_sunset = as.numeric((sunset - end_time), units = &quot;hours&quot; )) 5.6 Model acoustic detections as a function of light availability Here, we choose times of day as proxies for light availability (ie. nautical dawn, dusk for example). # Here, we make the assumption that light levels are fairly similar closer to dawn and closer to dusk. Hence, we model the number of acoustic detections as a function of time to dusk and time from dawn. # add species_codes/common_name to the above dataset acoustic_data &lt;- acoustic_data %&gt;% left_join(., species_codes[, c(1, 2, 5)], by = &quot;eBird_codes&quot; ) %&gt;% ungroup() # visualization plots &lt;- list() # collect slope and other coefficient information here metadata &lt;- c() for (i in 1:length(unique(acoustic_data$common_name))) { # extract species common_name a &lt;- unique(acoustic_data$common_name)[i] # subset data for plotting sp &lt;- acoustic_data[acoustic_data$common_name == a, ] # bind dawn and dusk data together dawn &lt;- sp %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% dplyr::select(detections, time_from_dawn, time_of_day) %&gt;% rename(., time_from_startTime = time_from_dawn) dusk &lt;- sp %&gt;% filter(time_of_day == &quot;dusk&quot;) %&gt;% dplyr::select(detections, time_to_dusk, time_of_day) %&gt;% rename(., time_from_startTime = time_to_dusk) data &lt;- bind_rows(dawn, dusk) p &lt;- grouped_ggscatterstats(data, x = time_from_startTime, y = detections, ylab = &quot;\\n Number of acoustic detections&quot;, xlab = &quot;Time to darkness\\n&quot;, grouping.var = time_of_day, annotation.args = list(title = a), plotgrid.args = list(nrow = 2, ncol = 1), ggplot.component = list(theme( text = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;), plot.title = element_text( family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot; ), plot.subtitle = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;, color = &quot;#1b2838&quot; ), axis.title = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot; ) )) ) ## save plot object plots[[i]] &lt;- p # extract_stats dawn_metadata &lt;- extract_stats(p[[1L]]) if (is.null(dawn_metadata$subtitle_data) == FALSE) { dawn_metadata &lt;- dawn_metadata$subtitle_data %&gt;% mutate(common_name = a) %&gt;% mutate(time_of_day = &quot;dawn&quot;) } dusk_metadata &lt;- extract_stats(p[[2L]]) if (is.null(dusk_metadata$subtitle_data) == FALSE) { dusk_metadata &lt;- dusk_metadata$subtitle_data %&gt;% mutate(common_name = a) %&gt;% mutate(time_of_day = &quot;dusk&quot;) } ## add the above to the metadata object metadata &lt;- bind_rows( metadata, dawn_metadata, dusk_metadata ) } # save as a single pdf cairo_pdf( filename = &quot;figs/acoustic-detections-time-to-darkness.pdf&quot;, width = 13, height = 12, onefile = TRUE ) plots dev.off() # write metadata to file metadata &lt;- apply(metadata, 2, as.character) write.csv(data.frame(metadata), &quot;results/metadata-detections-lightAvailability-correlations.csv&quot;, row.names = F) 5.7 Visualization of timing of vocalization # sampling effort by hour_of_day effort &lt;- acoustic_data %&gt;% dplyr::select(site_id, date, hour_of_day) %&gt;% distinct() %&gt;% arrange(hour_of_day) %&gt;% count(hour_of_day) %&gt;% rename(., nVisits = n) # visualization plots &lt;- list() for (i in 1:length(unique(acoustic_data$common_name))) { # extract species common_name a &lt;- unique(acoustic_data$common_name)[i] # subset data for plotting sp &lt;- acoustic_data[acoustic_data$common_name == a, ] %&gt;% group_by(hour_of_day) %&gt;% summarise(detections = sum(detections)) %&gt;% mutate(total_detections = sum(detections)) %&gt;% ungroup() # normalize for sampling effort sp &lt;- left_join(sp, effort, by = &quot;hour_of_day&quot;) %&gt;% mutate(normalized_detections = (detections / nVisits)) %&gt;% mutate(total_normalized_detections = sum(normalized_detections)) %&gt;% mutate(percent_normalized_detections = (normalized_detections / total_normalized_detections) * 100) %&gt;% ungroup() # add a break/no data for mid-day sp &lt;- sp %&gt;% add_row( hour_of_day = &quot;Mid-day&quot;, nVisits = 0, detections = 0, total_detections = 0, normalized_detections = 0, total_normalized_detections = 0, percent_normalized_detections = 0 ) # reordering factors for plotting sp$hour_of_day &lt;- factor(sp$hour_of_day, levels = c( &quot;6AM to 7AM&quot;, &quot;7AM to 8AM&quot;, &quot;8AM to 9AM&quot;, &quot;Mid-day&quot;, &quot;4PM to 5PM&quot;, &quot;5PM to 6PM&quot;, &quot;6PM to 7PM&quot; )) plots[[i]] &lt;- ggplot(sp, aes( x = hour_of_day, y = percent_normalized_detections )) + geom_bar( stat = &quot;identity&quot;, position = position_dodge(), fill = &quot;#883107&quot;, alpha = 0.9 ) + geom_text( aes( label = ifelse(percent_normalized_detections &gt; 0, round(percent_normalized_detections, 1), &quot;&quot; ), hjust = &quot;middle&quot;, vjust = -0.5, family = &quot;Century Gothic&quot; ), position = position_dodge(), angle = 0, size = 5 ) + theme_bw() + labs( title = a, subtitle = &quot;Each bar represents the percent detections (normalized for sampling effort) across dawn and dusk&quot;, y = &quot;\\n %acoustic detections&quot;, x = &quot;Time of Day\\n&quot; ) + theme( text = element_text(family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot;), plot.title = element_text( family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot; ), plot.subtitle = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;italic&quot;, color = &quot;#1b2838&quot; ), axis.title = element_text( family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot; ) ) } # save as a single pdf cairo_pdf( filename = &quot;figs/acoustic-detections-hour-of-day.pdf&quot;, width = 13, height = 12, onefile = TRUE ) plots dev.off() 5.8 %detections vs. median time to darkness # extract median time to darkness for dawn and dusk dawn &lt;- acoustic_data %&gt;% group_by(eBird_codes) %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% dplyr::select(time_from_dawn, time_of_day) %&gt;% rename(., time_from_startTime = time_from_dawn) %&gt;% summarise(median_startTime = median(time_from_startTime)) %&gt;% mutate(time_of_day = &quot;dawn&quot;) dusk &lt;- acoustic_data %&gt;% group_by(eBird_codes) %&gt;% filter(time_of_day == &quot;dusk&quot;) %&gt;% dplyr::select(time_to_dusk, time_of_day) %&gt;% rename(., time_from_startTime = time_to_dusk) %&gt;% summarise(median_startTime = median(time_from_startTime)) %&gt;% mutate(time_of_day = &quot;dusk&quot;) light &lt;- bind_rows(dawn, dusk) # this dataframe gives us the median time from dawn and time to dusk for each species vocal_act &lt;- vocal_act %&gt;% left_join(light, by = c(&quot;eBird_codes&quot;, &quot;time_of_day&quot;)) # adding median time from dawn and time to dusk to vocal activity data ## visualization ## creating two plots - one for dawn and one for dusk and using patchwork to combine them fig_light_dawn &lt;- vocal_act %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% ggscatterstats( data = ., x = median_startTime, y = percent_normalized_detections, xlab = &quot;Median Time to Darkness (in hours)\\n&quot;, ylab = &quot;\\n % Vocal activity at Dawn&quot;, pairwise.display = &quot;significant&quot;, package = &quot;ggsci&quot;, palette = &quot;default_jco&quot;, violin.args = list(width = 0), ggplot.component = list(theme( text = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;), plot.title = element_text( family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot; ), plot.subtitle = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;, color = &quot;#1b2838&quot; ), axis.title = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot; ) )) ) + geom_text_repel(aes(label = common_name), family = &quot;Century Gothic&quot;, fontface = &quot;italic&quot; ) fig_light_dusk &lt;- vocal_act %&gt;% filter(time_of_day == &quot;dusk&quot;) %&gt;% ggscatterstats( data = ., x = median_startTime, y = percent_normalized_detections, xlab = &quot;Median Time to Darkness(in hours))\\n&quot;, ylab = &quot;\\n % Vocal activity at Dusk&quot;, pairwise.display = &quot;significant&quot;, package = &quot;ggsci&quot;, palette = &quot;default_jco&quot;, violin.args = list(width = 0), ggplot.component = list(theme( text = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;), plot.title = element_text( family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot; ), plot.subtitle = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;, color = &quot;#1b2838&quot; ), axis.title = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot; ) )) ) + geom_text_repel(aes(label = common_name), family = &quot;Century Gothic&quot;, fontface = &quot;italic&quot; ) library(patchwork) fig_light_vocAct &lt;- wrap_plots(fig_light_dawn, fig_light_dusk, nrow = 2 ) + plot_annotation( tag_levels = &quot;a&quot;, tag_prefix = &quot;(&quot;, tag_suffix = &quot;)&quot; ) ggsave(fig_light_vocAct, filename = &quot;figs/fig_detections_vs_medianTimeTo Darkness.png&quot;, width = 14, height = 18, device = png(), units = &quot;in&quot;, dpi = 300) dev.off() (a) Positive correlation between vocal activity at dawn and median time to darkness and (b) Negative correlation between vocal activity at dusk and median time to darkness "],["foraging-guild.html", "Section 6 Foraging guild 6.1 Install necessary libraries 6.2 Load acoustic data and species scientific names data 6.3 Filtering acoustic data to ensure sampling periods are even across dawn and dusk 6.4 Vocal activity across time periods 6.5 Join the vocal_activity data and species trait data 6.6 Testing the differences among foraging guild categories using Wilcoxon test 6.7 Comparing vocal activity at dawn between foraging guilds", " Section 6 Foraging guild Here, we ask if species of a certain foraging guild have higher vocal activity at dawn compared to dusk. Our null hypothesis/expectation is that there would be no differences in vocal activity across foraging guilds irrespective of time of day. 6.1 Install necessary libraries library(tidyverse) library(dplyr) library(stringr) library(vegan) library(ggplot2) library(scico) library(data.table) library(extrafont) library(ggstatsplot) library(ggpubr) library(ggrepel) library(patchwork) library(rstatix) 6.2 Load acoustic data and species scientific names data acoustic_data &lt;- read.csv(&quot;results/acoustic_data.csv&quot;) species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) trait &lt;- read.csv(&quot;data/species-trait-dat.csv&quot;) 6.3 Filtering acoustic data to ensure sampling periods are even across dawn and dusk Since our recording schedule was uneven (6am to 10am in the morning and 4pm to 7pm in the evening), we filter acoustic data to retain recordings between 6am and 830am and recordings made between 4pm and 630pm so that the two sampling windows capture a similar amount of time right after dawn and right before dusk. dawn &lt;- acoustic_data %&gt;% group_by(time_of_day == &quot;dawn&quot;) %&gt;% filter(start_time &gt;= 060000 &amp; start_time &lt;= 083000) dusk &lt;- acoustic_data %&gt;% group_by(time_of_day == &quot;dusk&quot;) %&gt;% filter(start_time &gt;= 160000 &amp; start_time &lt;= 183000) acoustic_data &lt;- bind_rows(dawn[, -10], dusk[, -10]) 6.4 Vocal activity across time periods A number of factors need to be considered in further analysis: accounting for time_of_day, observed_identity for example. However, we run analyses that account for differences in calling activity by species for dawn and dusk. # sampling effort by time_of_day effort &lt;- acoustic_data %&gt;% dplyr::select(site_id, date, time_of_day) %&gt;% distinct() %&gt;% arrange(time_of_day) %&gt;% count(time_of_day) %&gt;% rename(., nVisits = n) # Above, we note that we had sampled ~145 site-date combinations at dawn, while ~230 site-date combinations were sampled at dusk # total number of acoustic detections summarized across every 10-s audio file # here, we estimate % detections at dawn and dusk, while accounting for sampling effort vocal_act &lt;- acoustic_data %&gt;% group_by(time_of_day, eBird_codes) %&gt;% summarise(detections = sum(number)) %&gt;% left_join(., species_codes[, c(1, 2, 5)], by = &quot;eBird_codes&quot; ) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_detections = sum(detections)) %&gt;% mutate(percent_detections = (detections / total_detections) * 100) %&gt;% ungroup() ## accouting for sampling effort and normalizing data vocal_act &lt;- vocal_act %&gt;% left_join(., effort, by = &quot;time_of_day&quot;) %&gt;% mutate(normalized_detections = detections / nVisits) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_normalized_detections = sum(normalized_detections)) %&gt;% mutate(percent_normalized_detections = (normalized_detections / total_normalized_detections) * 100) %&gt;% ungroup() %&gt;% # in our case, we have 4 species which have 100% detections in dawn, Indian blackbird, Little spiderhunter, Oriental-Magpie Robin and Purple sunbird. For these, we add a additional row specifying no detections in dusk. add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;pursun4&quot;, detections = 0, scientific_name = &quot;Cinnyris asiaticus&quot;, common_name = &quot;Purple Sunbird&quot;, total_detections = 96, percent_detections = 0, normalized_detections = 0, percent_normalized_detections = 0, nVisits = 230, total_normalized_detections = 0.6620690 ) %&gt;% add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;eurbla2&quot;, detections = 0, scientific_name = &quot;Turdus simillimus&quot;, common_name = &quot;Indian Blackbird&quot;, total_detections = 179, percent_detections = 0, normalized_detections = 0, percent_normalized_detections = 0, nVisits = 230, total_normalized_detections = 1.2344828 ) %&gt;% add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;litspi1&quot;, detections = 0, scientific_name = &quot;Arachnothera longirostra&quot;, common_name = &quot;Little Spiderhunter&quot;, total_detections = 204, percent_detections = 0, normalized_detections = 0, nVisits = 230, percent_normalized_detections = 0, total_normalized_detections = 1.4068966 ) %&gt;% add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;magrob&quot;, detections = 0, scientific_name = &quot;Copsychus saularis&quot;, common_name = &quot;Oriental Magpie-Robin&quot;, total_detections = 119, percent_detections = 0, normalized_detections = 0, nVisits = 230, percent_normalized_detections = 0, total_normalized_detections = 0.6620690 ) 6.5 Join the vocal_activity data and species trait data vocal_act &lt;- vocal_act %&gt;% left_join(trait[, c(1, 2, 29)], by = c( &quot;scientific_name&quot;, &quot;common_name&quot; )) ## remove species that are poorly represented by a particular trophic niche ## we get rid of nectarivore species, aquatic predator and granivore vocal_act &lt;- vocal_act %&gt;% filter(trophic_niche != &quot;Aquatic predator&quot;) %&gt;% filter(trophic_niche != &quot;Granivore&quot;) %&gt;% filter(trophic_niche != &quot;Nectarivore&quot;) %&gt;% filter(trophic_niche != &quot;Vertivore&quot;) ## We retained 62 out of 69 species after the above filters 6.6 Testing the differences among foraging guild categories using Wilcoxon test Here, we see whether there are differences in the vocal activity between invertivores, frugivores, and omnivores in dawn and dusk individually. stat.test &lt;- vocal_act %&gt;% group_by(time_of_day) %&gt;% wilcox_test(percent_normalized_detections ~ trophic_niche) Significant differences were observed between frugivore and omnivore species at dawn and dusk. 6.7 Comparing vocal activity at dawn between foraging guilds fig_between_foragingGuild_vocAct &lt;- vocal_act %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% ggbetweenstats( x = trophic_niche, y = percent_normalized_detections, xlab = &quot;Foraging guild&quot;, ylab = &quot;% Vocal activity at Dawn&quot;, pairwise.display = &quot;significant&quot;, package = &quot;ggsci&quot;, palette = &quot;default_jco&quot;, violin.args = list(width = 0), ggplot.component = list(theme( text = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;), plot.title = element_text( family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot; ), plot.subtitle = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;, color = &quot;#1b2838&quot; ), axis.title = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot; ) )) ) ggsave(fig_between_foragingGuild_vocAct, filename = &quot;figs/fig_percentDetections_vs_foragingGuild.png&quot;, width = 16, height = 14, device = png(), units = &quot;in&quot;, dpi = 300) dev.off() We found significant differences in the dawn vocal activity between invertivore and frugivore species and omnivore and frugivore species. "],["territoriality.html", "Section 7 Territoriality 7.1 Loading necessary libraries 7.2 Loading territoriality data 7.3 Load acoustic data and species scientific names data 7.4 Filtering acoustic data to ensure sampling periods are even across dawn and dusk 7.5 Vocal activity across time periods 7.6 Join the vocal_activity data and territoriality data 7.7 Testing the differences between territoriality categories using Wilcoxon test", " Section 7 Territoriality In this script, we examine the role of territoriality in vocal activity between dawn and dusk. The expectation is that highly territorial, weakly territorial and non-territorial species have higher vocal activity in dawn than dusk. Highly territorial species are those which defend and maintain their territories throughout the year. Weakly territorial species are those which have broadly overlapping home ranges, or sometimes join mixed flocks without defined spatial ranges. Non-territorial species are those which do not defend territories, or defend very small areas around nest sites, or defend song or display posts only. 7.1 Loading necessary libraries library(tidyverse) library(dplyr) library(stringr) library(vegan) library(ggplot2) library(scico) library(data.table) library(extrafont) library(ggstatsplot) library(purrr) library(ggpubr) library(ggrepel) library(ggdist) library(gghalves) library(rstatix) 7.2 Loading territoriality data territoriality &lt;- read.csv(&quot;data/territoriality-data.csv&quot;) territoriality &lt;- territoriality %&gt;% dplyr::select(Species, Territory) colnames(territoriality) &lt;- c(&quot;scientific_name&quot;, &quot;territory&quot;) # Updating the scientific names of following species as per our dataset: # Flame-throated bulbul- Rubigula gularis (earlier Pycnonotus gularis) # Black eagle- Ictinaetus malaiensis (earlier Ictinaetus malayensis) # Brown-capped pygmy woodpecker- Yungipicus nanus (earlier Dendrocopos nanus) # Malabar barbet- Psilopogon malabaricus (earlier Megalaima malabarica) # Dark-fronted babbler- Dumetia atriceps (earlier Rhopocichla atriceps) # Greater flameback- Chrysocolaptes guttacristatus (earlier Chrysocolaptes lucidus) # Indian blue robin- Larvivora brunnea (earlier Luscinia brunnea) # Indian yellow tit- Machlolophus aplonotus (earlier Parus aplonotus) # Jungle babbler- Argya striata (earlier Turdoides striata) # Orange-headed thrush- Geokichla citrina (earlier Zoothera citrina) # Rufous babbler- Argya subrufa (earlier Turdoides subrufa) # Rufous woodpecker- Micropternus brachyurus (earlier Celeus brachyurus) # Rusty-tailed flycatcher- Ficedula ruficauda (earlier Muscicapa ruficauda # Spot-bellied eagle owl- Ketupa nipalensis (earlier Bubo nipalensis) # Spotted dove- Spilopelia chinensis (earlier Stigmatopelia chinensis) # Thick-billed warbler- Arundinax aedon (earlier Acrocephalus aedon) # White-bellied flycatcher- Cyornis pallidipes (earlier Cyornis pallipes) # White-cheeked barbet- Psilopogon viridis (earlier Megalaima viridis) # Wayanad laughingthrush- Pterorhinus delesserti (earlier Garrulax delesserti) # Yellow-browed bulbul- Iole indica (earlier Acritillas indica) territoriality &lt;- territoriality %&gt;% mutate(scientific_name = recode(scientific_name, &quot;Pycnonotus gularis&quot; = &quot;Rubigula gularis&quot;, &quot;Ictinaetus malayensis&quot; = &quot;Ictinaetus malaiensis&quot;, &quot;Dendrocopos nanus&quot; = &quot;Yungipicus nanus&quot;, &quot;Megalaima malabarica&quot; = &quot;Psilopogon malabaricus&quot;, &quot;Rhopocichla atriceps&quot; = &quot;Dumetia atriceps&quot;, &quot;Chrysocolaptes lucidus&quot; = &quot;Chrysocolaptes guttacristatus&quot;, &quot;Luscinia brunnea&quot; = &quot;Larvivora brunnea&quot;, &quot;Parus aplonotus&quot; = &quot;Machlolophus aplonotus&quot;, &quot;Turdoides striata&quot; = &quot;Argya striata&quot;, &quot;Zoothera citrina&quot; = &quot;Geokichla citrina&quot;, &quot;Turdoides subrufa&quot; = &quot;Argya subrufa&quot;, &quot;Celeus brachyurus&quot; = &quot;Micropternus brachyurus&quot;, &quot;Muscicapa ruficauda&quot; = &quot;Ficedula ruficauda&quot;, &quot;Bubo nipalensis&quot; = &quot;Ketupa nipalensis&quot;, &quot;Stigmatopelia chinensis&quot; = &quot;Spilopelia chinensis&quot;, &quot;Acrocephalus aedon&quot; = &quot;Arundinax aedon&quot;, &quot;Cyornis pallipes&quot; = &quot;Cyornis pallidipes&quot;, &quot;Megalaima viridis&quot; = &quot;Psilopogon viridis&quot;, &quot;Garrulax delesserti&quot; = &quot;Pterorhinus delesserti&quot;, &quot;Acritillas indica&quot; = &quot;Iole indica&quot;)) 7.3 Load acoustic data and species scientific names data acoustic_data &lt;- read.csv(&quot;results/acoustic_data.csv&quot;) species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) 7.4 Filtering acoustic data to ensure sampling periods are even across dawn and dusk Since our recording schedule was uneven (6am to 10am in the morning and 4pm to 7pm in the evening), we filter acoustic data to retain recordings between 6am and 830am and recordings made between 4pm and 630pm so that the two sampling windows capture a similar amount of time right after dawn and right before dusk. dawn &lt;- acoustic_data %&gt;% group_by(time_of_day == &quot;dawn&quot;) %&gt;% filter(start_time &gt;= 060000 &amp; start_time &lt;= 083000) dusk &lt;- acoustic_data %&gt;% group_by(time_of_day == &quot;dusk&quot;) %&gt;% filter(start_time &gt;= 160000 &amp; start_time &lt;= 183000) acoustic_data &lt;- bind_rows(dawn[, -10], dusk[, -10]) 7.5 Vocal activity across time periods A number of factors need to be considered in further analysis: accounting for time_of_day, observed_identity for example. However, we run analyses that account for differences in calling activity by species for dawn and dusk. # sampling effort by time_of_day effort &lt;- acoustic_data %&gt;% dplyr::select(site_id, date, time_of_day) %&gt;% distinct() %&gt;% arrange(time_of_day) %&gt;% count(time_of_day) %&gt;% rename(., nVisits = n) # Above, we note that we had sampled ~145 site-date combinations at dawn, while ~230 site-date combinations were sampled at dusk # total number of acoustic detections summarized across every 10-s audio file # here, we estimate % detections at dawn and dusk, while accounting for sampling effort vocal_act &lt;- acoustic_data %&gt;% group_by(time_of_day, eBird_codes) %&gt;% summarise(detections = sum(number)) %&gt;% left_join(., species_codes[, c(1, 2, 5)], by = &quot;eBird_codes&quot; ) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_detections = sum(detections)) %&gt;% mutate(percent_detections = (detections / total_detections) * 100) %&gt;% ungroup() ## accouting for sampling effort and normalizing data vocal_act &lt;- vocal_act %&gt;% left_join(., effort, by = &quot;time_of_day&quot;) %&gt;% mutate(normalized_detections = detections / nVisits) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_normalized_detections = sum(normalized_detections)) %&gt;% mutate(percent_normalized_detections = (normalized_detections / total_normalized_detections) * 100) %&gt;% ungroup() %&gt;% # in our case, we have 4 species which have 100% detections in dawn, Indian blackbird, Little spiderhunter, Oriental-Magpie Robin and Purple sunbird. For these, we add a additional row specifying no detections in dusk. add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;pursun4&quot;, detections = 0, scientific_name = &quot;Cinnyris asiaticus&quot;, common_name = &quot;Purple Sunbird&quot;, total_detections = 96, percent_detections = 0, normalized_detections = 0, percent_normalized_detections = 0, nVisits = 230, total_normalized_detections = 0.6620690 ) %&gt;% add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;eurbla2&quot;, detections = 0, scientific_name = &quot;Turdus simillimus&quot;, common_name = &quot;Indian Blackbird&quot;, total_detections = 179, percent_detections = 0, normalized_detections = 0, percent_normalized_detections = 0, nVisits = 230, total_normalized_detections = 1.2344828 ) %&gt;% add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;litspi1&quot;, detections = 0, scientific_name = &quot;Arachnothera longirostra&quot;, common_name = &quot;Little Spiderhunter&quot;, total_detections = 204, percent_detections = 0, normalized_detections = 0, nVisits = 230, percent_normalized_detections = 0, total_normalized_detections = 1.4068966 ) %&gt;% add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;magrob&quot;, detections = 0, scientific_name = &quot;Copsychus saularis&quot;, common_name = &quot;Oriental Magpie-Robin&quot;, total_detections = 119, percent_detections = 0, normalized_detections = 0, nVisits = 230, percent_normalized_detections = 0, total_normalized_detections = 0.6620690 ) 7.6 Join the vocal_activity data and territoriality data vocal_act &lt;- vocal_act %&gt;% left_join(territoriality, by = &quot;scientific_name&quot;) %&gt;% dplyr::mutate(territory_cat = case_when(territory %in% &quot;3&quot; ~ &quot;Highly territorial&quot;, territory %in% &quot;2&quot; ~ &quot;Weakly territorial&quot;, territory %in% &quot;1&quot; ~ &quot;Non-territorial&quot;)) There are 19 highly territorial, 11 non-territorial and 39 weakly territorial species in both dawn and dusk. 7.7 Testing the differences between territoriality categories using Wilcoxon test Here, we see whether there are differences in the vocal activity among highly territorial, weakly territorial and non-territorial species in dawn and dusk individually. stat.test &lt;- vocal_act %&gt;% group_by(time_of_day) %&gt;% wilcox_test(percent_normalized_detections ~ territory_cat) Vocal activity is not significantly different across categories of territoriality. ## Comparing dawn vocal activity between categories of territoriality ## between dawn and dusk fig_terr_vocAct &lt;- vocal_act %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% mutate(territory_cat = fct_relevel( territory_cat, &quot;Highly territorial&quot;, &quot;Weakly territorial&quot;, &quot;Non-territorial&quot; )) %&gt;% ggbetweenstats( x = territory_cat, y = percent_normalized_detections, xlab = &quot;Extent of territoriality&quot;, ylab = &quot;% Vocal activity at Dawn&quot;, pairwise.display = &quot;significant&quot;, package = &quot;ggsci&quot;, palette = &quot;default_jco&quot;, violin.args = list(width = 0), ggplot.component = list(theme( text = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;), plot.title = element_text( family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot; ), plot.subtitle = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;, color = &quot;#1b2838&quot; ), axis.title = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot; ) )) ) ggsave(fig_terr_vocAct, filename = &quot;figs/fig_percentDetections_vs_territoriality.png&quot;, width = 16, height = 14, device = png(), units = &quot;in&quot;, dpi = 300) dev.off() Weakly territorial species were significantly more dawn shifted than non-territorial species at dawn. "],["sociality.html", "Section 8 Sociality 8.1 Loading necessary libraries 8.2 Loading sociality data 8.3 Load acoustic data and species scientific names data 8.4 Filtering acoustic data to ensure sampling periods are even across dawn and dusk 8.5 Vocal activity across time periods 8.6 Join the vocal_activity data and sociality data 8.7 Testing the differences between socialiaty categories using Wilcoxon test 8.8 Visualization of vocal activity at dawn vs. categories of sociality", " Section 8 Sociality In this script, we examine the role of sociality in vocal activity between dawn and dusk. The expectation is that communal and non-communal signalling species have higher vocal activity in dawn than dusk. Communal signallers are species that produce long-range acoustic signals in groups, either duets (two individuals) or choruses (three or more individuals) by both males and females. Non-communal signallers are species that sing as single individuals and not communally. 8.1 Loading necessary libraries library(tidyverse) library(dplyr) library(stringr) library(vegan) library(ggplot2) library(scico) library(data.table) library(extrafont) library(purrr) library(ggstatsplot) library(ggpubr) library(ggrepel) library(ggdist) library(gghalves) library(rstatix) 8.2 Loading sociality data sociality &lt;- read.csv(&quot;data/sociality-data.csv&quot;) sociality &lt;- sociality %&gt;% dplyr::select(Species, Communal) colnames(sociality) &lt;- c(&quot;scientific_name&quot;, &quot;sociality&quot;) # Updating the scientific names of following species as per our dataset: # Flame-throated bulbul- Rubigula gularis (earlier Pycnonotus gularis) # Black eagle- Ictinaetus malaiensis (earlier Ictinaetus malayensis) # Brown-capped pygmy woodpecker- Yungipicus nanus (earlier Dendrocopos nanus) # Malabar barbet- Psilopogon malabaricus (earlier Megalaima malabarica) # Dark-fronted babbler- Dumetia atriceps (earlier Rhopocichla atriceps) # Greater flameback- Chrysocolaptes guttacristatus (earlier Chrysocolaptes lucidus) # Indian blue robin- Larvivora brunnea (earlier Luscinia brunnea) # Indian yellow tit- Machlolophus aplonotus (earlier Parus aplonotus) # Jungle babbler- Argya striata (earlier Turdoides striata) # Orange-headed thrush- Geokichla citrina (earlier Zoothera citrina) # Rufous babbler- Argya subrufa (earlier Turdoides subrufa) # Rufous woodpecker- Micropternus brachyurus (earlier Celeus brachyurus) # Rusty-tailed flycatcher- Ficedula ruficauda (earlier Muscicapa ruficauda # Spot-bellied eagle owl- Ketupa nipalensis (earlier Bubo nipalensis) # Spotted dove- Spilopelia chinensis (earlier Stigmatopelia chinensis) # Thick-billed warbler- Arundinax aedon (earlier Acrocephalus aedon) # White-bellied flycatcher- Cyornis pallidipes (earlier Cyornis pallipes) # White-cheeked barbet- Psilopogon viridis (earlier Megalaima viridis) # Wayanad laughingthrush- Pterorhinus delesserti (earlier Garrulax delesserti) # Yellow-browed bulbul- Iole indica (earlier Acritillas indica) sociality &lt;- sociality %&gt;% mutate(scientific_name = recode(scientific_name, &quot;Pycnonotus gularis&quot; = &quot;Rubigula gularis&quot;, &quot;Ictinaetus malayensis&quot; = &quot;Ictinaetus malaiensis&quot;, &quot;Dendrocopos nanus&quot; = &quot;Yungipicus nanus&quot;, &quot;Megalaima malabarica&quot; = &quot;Psilopogon malabaricus&quot;, &quot;Rhopocichla atriceps&quot; = &quot;Dumetia atriceps&quot;, &quot;Chrysocolaptes lucidus&quot; = &quot;Chrysocolaptes guttacristatus&quot;, &quot;Luscinia brunnea&quot; = &quot;Larvivora brunnea&quot;, &quot;Parus aplonotus&quot; = &quot;Machlolophus aplonotus&quot;, &quot;Turdoides striata&quot; = &quot;Argya striata&quot;, &quot;Zoothera citrina&quot; = &quot;Geokichla citrina&quot;, &quot;Turdoides subrufa&quot; = &quot;Argya subrufa&quot;, &quot;Celeus brachyurus&quot; = &quot;Micropternus brachyurus&quot;, &quot;Muscicapa ruficauda&quot; = &quot;Ficedula ruficauda&quot;, &quot;Bubo nipalensis&quot; = &quot;Ketupa nipalensis&quot;, &quot;Stigmatopelia chinensis&quot; = &quot;Spilopelia chinensis&quot;, &quot;Acrocephalus aedon&quot; = &quot;Arundinax aedon&quot;, &quot;Cyornis pallipes&quot; = &quot;Cyornis pallidipes&quot;, &quot;Megalaima viridis&quot; = &quot;Psilopogon viridis&quot;, &quot;Garrulax delesserti&quot; = &quot;Pterorhinus delesserti&quot;, &quot;Acritillas indica&quot; = &quot;Iole indica&quot;)) 8.3 Load acoustic data and species scientific names data acoustic_data &lt;- read.csv(&quot;results/acoustic_data.csv&quot;) species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) 8.4 Filtering acoustic data to ensure sampling periods are even across dawn and dusk Since our recording schedule was uneven (6am to 10am in the morning and 4pm to 7pm in the evening), we filter acoustic data to retain recordings between 6am and 830am and recordings made between 4pm and 630pm so that the two sampling windows capture a similar amount of time right after dawn and right before dusk. dawn &lt;- acoustic_data %&gt;% group_by(time_of_day == &quot;dawn&quot;) %&gt;% filter(start_time &gt;= 060000 &amp; start_time &lt;= 083000) dusk &lt;- acoustic_data %&gt;% group_by(time_of_day == &quot;dusk&quot;) %&gt;% filter(start_time &gt;= 160000 &amp; start_time &lt;= 183000) acoustic_data &lt;- bind_rows(dawn[, -10], dusk[, -10]) 8.5 Vocal activity across time periods A number of factors need to be considered in further analysis: accounting for time_of_day, observed_identity for example. However, we run analyses that account for differences in calling activity by species for dawn and dusk. # sampling effort by time_of_day effort &lt;- acoustic_data %&gt;% dplyr::select(site_id, date, time_of_day) %&gt;% distinct() %&gt;% arrange(time_of_day) %&gt;% count(time_of_day) %&gt;% rename(., nVisits = n) # Above, we note that we had sampled ~145 site-date combinations at dawn, while ~230 site-date combinations were sampled at dusk # total number of acoustic detections summarized across every 10-s audio file # here, we estimate % detections at dawn and dusk, while accounting for sampling effort vocal_act &lt;- acoustic_data %&gt;% group_by(time_of_day, eBird_codes) %&gt;% summarise(detections = sum(number)) %&gt;% left_join(., species_codes[, c(1, 2, 5)], by = &quot;eBird_codes&quot; ) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_detections = sum(detections)) %&gt;% mutate(percent_detections = (detections / total_detections) * 100) %&gt;% ungroup() ## accouting for sampling effort and normalizing data vocal_act &lt;- vocal_act %&gt;% left_join(., effort, by = &quot;time_of_day&quot;) %&gt;% mutate(normalized_detections = detections / nVisits) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_normalized_detections = sum(normalized_detections)) %&gt;% mutate(percent_normalized_detections = (normalized_detections / total_normalized_detections) * 100) %&gt;% ungroup() %&gt;% # in our case, we have 4 species which have 100% detections in dawn, Indian blackbird, Little spiderhunter, Oriental-Magpie Robin and Purple sunbird. For these, we add a additional row specifying no detections in dusk. add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;pursun4&quot;, detections = 0, scientific_name = &quot;Cinnyris asiaticus&quot;, common_name = &quot;Purple Sunbird&quot;, total_detections = 96, percent_detections = 0, normalized_detections = 0, percent_normalized_detections = 0, nVisits = 230, total_normalized_detections = 0.6620690 ) %&gt;% add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;eurbla2&quot;, detections = 0, scientific_name = &quot;Turdus simillimus&quot;, common_name = &quot;Indian Blackbird&quot;, total_detections = 179, percent_detections = 0, normalized_detections = 0, percent_normalized_detections = 0, nVisits = 230, total_normalized_detections = 1.2344828 ) %&gt;% add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;litspi1&quot;, detections = 0, scientific_name = &quot;Arachnothera longirostra&quot;, common_name = &quot;Little Spiderhunter&quot;, total_detections = 204, percent_detections = 0, normalized_detections = 0, nVisits = 230, percent_normalized_detections = 0, total_normalized_detections = 1.4068966 ) %&gt;% add_row( time_of_day = &quot;dusk&quot;, eBird_codes = &quot;magrob&quot;, detections = 0, scientific_name = &quot;Copsychus saularis&quot;, common_name = &quot;Oriental Magpie-Robin&quot;, total_detections = 119, percent_detections = 0, normalized_detections = 0, nVisits = 230, percent_normalized_detections = 0, total_normalized_detections = 0.6620690 ) 8.6 Join the vocal_activity data and sociality data vocal_act &lt;- vocal_act %&gt;% left_join(sociality, by = &quot;scientific_name&quot;) %&gt;% dplyr::mutate(sociality_cat = case_when(sociality %in% &quot;0&quot; ~ &quot;Non-communal signallers&quot;, sociality %in% &quot;1&quot; ~ &quot;Communal signallers&quot;)) 8.7 Testing the differences between socialiaty categories using Wilcoxon test Here, we see whether there are differences in the vocal activity between communal and non-communal signallers in dawn and dusk individually. stat.test &lt;- vocal_act %&gt;% group_by(time_of_day) %&gt;% wilcox_test(percent_normalized_detections ~ sociality_cat) No significant differences were observed in vocal activity between communal signallers and non-communal signallers. 8.8 Visualization of vocal activity at dawn vs. categories of sociality ## between dawn and dusk fig_soc_vocAct &lt;- vocal_act %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% ggbetweenstats( x = sociality_cat, y = percent_normalized_detections, xlab = &quot;Levels of sociality&quot;, ylab = &quot;% Vocal Activity at Dawn&quot;, pairwise.display = &quot;significant&quot;, package = &quot;ggsci&quot;, palette = &quot;default_jco&quot;, violin.args = list(width = 0), ggplot.component = list(theme( text = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;), plot.title = element_text( family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot; ), plot.subtitle = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;, color = &quot;#1b2838&quot; ), axis.title = element_text( family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot; ) )) ) ggsave(fig_soc_vocAct, filename = &quot;figs/fig_percentDetections_vs_sociality.png&quot;, width = 16, height = 14, device = png(), units = &quot;in&quot;, dpi = 300) dev.off() No differences in vocal activity between communal signallers and non-communal signallers at dawn. "],["phylogenetic-generalized-least-squares-pgls-regressions.html", "Section 9 Phylogenetic Generalized Least Squares (PGLS) regressions 9.1 Loading necessary libraries 9.2 Loading necessary data 9.3 Getting the maximum credibility tree from the nexus file 9.4 Filtering acoustic data to ensure sampling periods are even across dawn and dusk 9.5 Vocal Activity 9.6 Light availability 9.7 Territoriality 9.8 Sociality 9.9 Peak frequency 9.10 Foraging guild 9.11 Data cleaning 9.12 PGLS analysis", " Section 9 Phylogenetic Generalized Least Squares (PGLS) regressions In this script, we examine which predictor/hypothesis (light availability, peak frequency, foraging guild, territoriality, and sociality) best explains the variation in vocal activity between dawn and dusk. We use linear regresssions while controlling for potential phylogenetic signals/relationships. 9.1 Loading necessary libraries library(ape) library(nlme) library(geiger) library(phytools) library(phangorn) library(dplyr) library(tidyverse) library(tidyr) library(ggplot2) library(stringr) library(vegan) library(scico) library(data.table) library(extrafont) library(suncalc) library(lutz) library(ggpmisc) library(ggpubr) library(hms) library(phyr) library(sjPlot) library(emmeans) 9.2 Loading necessary data acoustic_data &lt;- read.csv(&quot;results/acoustic_data.csv&quot;) species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) trait &lt;- read.csv(&quot;data/species-trait-dat.csv&quot;) territoriality &lt;- read.csv(&quot;data/territoriality-data.csv&quot;) sociality &lt;- read.csv(&quot;data/sociality-data.csv&quot;) freq &lt;- read.csv(&quot;data/frequency-data.csv&quot;) sites &lt;- read.csv(&quot;data/list-of-sites.csv&quot;) tree &lt;- read.nexus(&quot;data/birdtree.nex&quot;) # obtained 100 trees using Hackett all species 9.3 Getting the maximum credibility tree from the nexus file tree &lt;- mcc(tree) 9.4 Filtering acoustic data to ensure sampling periods are even across dawn and dusk Since our recording schedule was uneven (6am to 10am in the morning and 4pm to 7pm in the evening), we filter acoustic data to retain recordings between 6am and 830am and recordings made between 4pm and 630pm so that the two sampling windows capture a similar amount of time right after dawn and right before dusk. dawn &lt;- acoustic_data %&gt;% group_by(time_of_day == &quot;dawn&quot;) %&gt;% filter(start_time &gt;= 060000 &amp; start_time &lt;= 083000) dusk &lt;- acoustic_data %&gt;% group_by(time_of_day == &quot;dusk&quot;) %&gt;% filter(start_time &gt;= 160000 &amp; start_time &lt;= 183000) acoustic_data &lt;- bind_rows(dawn[, -10], dusk[, -10]) 9.5 Vocal Activity We use normalized percent detections (percent detections which account for sampling effort) as a response variable in our PGLS analysis. # sampling effort by time_of_day effort &lt;- acoustic_data %&gt;% dplyr::select(site_id, date, time_of_day) %&gt;% distinct() %&gt;% arrange(time_of_day) %&gt;% count(time_of_day) %&gt;% rename(., nVisits = n) # Above, we note that we had sampled ~145 site-date combinations at dawn, while ~230 site-date combinations were sampled at dusk # total number of acoustic detections summarized across every 10-s audio file # here, we estimate % detections at dawn and dusk, while accounting for sampling effort vocal_act &lt;- acoustic_data %&gt;% group_by(time_of_day, eBird_codes) %&gt;% summarise(detections = sum(number)) %&gt;% left_join(., species_codes[, c(1, 2, 5)], by = &quot;eBird_codes&quot; ) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_detections = sum(detections)) %&gt;% mutate(percent_detections = (detections / total_detections) * 100) %&gt;% ungroup() ## accouting for sampling effort and normalizing data vocal_act &lt;- vocal_act %&gt;% left_join(., effort, by = &quot;time_of_day&quot;) %&gt;% mutate(normalized_detections = detections / nVisits) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_normalized_detections = sum(normalized_detections)) %&gt;% mutate(percent_normalized_detections = (normalized_detections / total_normalized_detections) * 100) %&gt;% ungroup() 9.6 Light availability Here, we prepare a predictor for light availability or time to darkness for the PGLS analysis # add longitude and latitude to acoustic_data acoustic_data &lt;- left_join(acoustic_data, sites[, c(2, 4, 5)], by = &quot;site_id&quot; ) acoustic_data$date &lt;- lubridate::ymd(acoustic_data$date) names(acoustic_data)[c(10, 11)] &lt;- c(&quot;lon&quot;, &quot;lat&quot;) # find out what time zone needs to be provided for the sunlight calculations acoustic_data$tz &lt;- tz_lookup_coords( lat = acoustic_data$lat, lon = acoustic_data$lon, method = &quot;accurate&quot;, warn = FALSE ) # extract nauticalDawn, nauticalDusk, sunrise and sunset times light_data &lt;- getSunlightTimes( data = acoustic_data, keep = c( &quot;sunrise&quot;, &quot;sunset&quot;, &quot;nauticalDawn&quot;, &quot;nauticalDusk&quot; ), tz = &quot;Asia/Kolkata&quot; ) %&gt;% distinct(.) # strip dates from new columms and keep only time light_data$sunrise &lt;- as_hms(light_data$sunrise) light_data$sunset &lt;- as_hms(light_data$sunset) light_data$nauticalDawn &lt;- as_hms(light_data$nauticalDawn) light_data$nauticalDusk &lt;- as_hms(light_data$nauticalDusk) # summarize detections of species for every 15-min window acoustic_data &lt;- acoustic_data %&gt;% group_by( site_id, date, start_time, time_of_day, eBird_codes, lon, lat, hour_of_day ) %&gt;% summarise(detections = sum(number)) %&gt;% ungroup() # join the two datasets acoustic_data &lt;- left_join(acoustic_data, light_data, by = c(&quot;date&quot;, &quot;lon&quot;, &quot;lat&quot;) ) # format the start_time column in the acoustic data to keep it as the same format as light_data acoustic_data &lt;- acoustic_data %&gt;% mutate(across(start_time, str_pad, width = 6, pad = &quot;0&quot;)) acoustic_data$start_time &lt;- format(strptime(acoustic_data$start_time, format = &quot;%H%M%S&quot; ), format = &quot;%H:%M:%S&quot;) acoustic_data$start_time &lt;- as_hms(acoustic_data$start_time) # add end_times for each recording acoustic_data &lt;- acoustic_data %&gt;% mutate(end_time = start_time + dminutes(20)) acoustic_data$end_time &lt;- as_hms(acoustic_data$end_time) # subtract times from sunrise, sunset, nauticalDawn and nauticalDusk from start_time of acoustic detections acoustic_data &lt;- acoustic_data %&gt;% mutate(time_from_dawn = as.numeric((start_time - nauticalDawn), units = &quot;hours&quot; )) %&gt;% mutate(time_from_sunrise = as.numeric((start_time - sunrise), units = &quot;hours&quot; )) %&gt;% mutate(time_to_dusk = as.numeric((nauticalDusk - end_time), units = &quot;hours&quot; )) %&gt;% mutate(time_to_sunset = as.numeric((sunset - end_time), units = &quot;hours&quot; )) # add species scientific name to this data acoustic_data &lt;- acoustic_data %&gt;% left_join(., species_codes[, c(1, 5)], by = &quot;eBird_codes&quot; ) # binding dawn and dusk times together to get at median time/light availability at dawn dawn &lt;- acoustic_data %&gt;% group_by(eBird_codes) %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% dplyr::select(time_from_dawn, time_of_day) %&gt;% rename(., time_from_startTime = time_from_dawn) %&gt;% summarise(median_startTime = median(time_from_startTime)) %&gt;% mutate(time_of_day = &quot;dawn&quot;) dusk &lt;- acoustic_data %&gt;% group_by(eBird_codes) %&gt;% filter(time_of_day == &quot;dusk&quot;) %&gt;% dplyr::select(time_to_dusk, time_of_day) %&gt;% rename(., time_from_startTime = time_to_dusk) %&gt;% summarise(median_startTime = median(time_from_startTime)) %&gt;% mutate(time_of_day = &quot;dusk&quot;) light &lt;- bind_rows(dawn, dusk) # this dataframe gives us the median time from dawn and time to dusk for each species vocal_act &lt;- vocal_act %&gt;% left_join(light, by = c(&quot;eBird_codes&quot;, &quot;time_of_day&quot;)) # adding median time from dawn and time to dusk to vocal activity data 9.7 Territoriality We prepare territoriality as a predictor for the PGLS analysis territoriality &lt;- territoriality %&gt;% dplyr::select(Species, Territory) colnames(territoriality) &lt;- c(&quot;scientific_name&quot;, &quot;territory&quot;) # Updating the scientific names of following species as per our dataset: # Flame-throated bulbul- Rubigula gularis (earlier Pycnonotus gularis) # Black eagle- Ictinaetus malaiensis (earlier Ictinaetus malayensis) # Brown-capped pygmy woodpecker- Yungipicus nanus (earlier Dendrocopos nanus) # Malabar barbet- Psilopogon malabaricus (earlier Megalaima malabarica) # Dark-fronted babbler- Dumetia atriceps (earlier Rhopocichla atriceps) # Greater flameback- Chrysocolaptes guttacristatus (earlier Chrysocolaptes lucidus) # Indian blue robin- Larvivora brunnea (earlier Luscinia brunnea) # Indian yellow tit- Machlolophus aplonotus (earlier Parus aplonotus) # Jungle babbler- Argya striata (earlier Turdoides striata) # Orange-headed thrush- Geokichla citrina (earlier Zoothera citrina) # Rufous babbler- Argya subrufa (earlier Turdoides subrufa) # Rufous woodpecker- Micropternus brachyurus (earlier Celeus brachyurus) # Rusty-tailed flycatcher- Ficedula ruficauda (earlier Muscicapa ruficauda # Spot-bellied eagle owl- Ketupa nipalensis (earlier Bubo nipalensis) # Spotted dove- Spilopelia chinensis (earlier Stigmatopelia chinensis) # Thick-billed warbler- Arundinax aedon (earlier Acrocephalus aedon) # White-bellied flycatcher- Cyornis pallidipes (earlier Cyornis pallipes) # White-cheeked barbet- Psilopogon viridis (earlier Megalaima viridis) # Wayanad laughingthrush- Pterorhinus delesserti (earlier Garrulax delesserti) # Yellow-browed bulbul- Iole indica (earlier Acritillas indica) territoriality &lt;- territoriality %&gt;% mutate(scientific_name = recode(scientific_name, &quot;Pycnonotus gularis&quot; = &quot;Rubigula gularis&quot;, &quot;Ictinaetus malayensis&quot; = &quot;Ictinaetus malaiensis&quot;, &quot;Dendrocopos nanus&quot; = &quot;Yungipicus nanus&quot;, &quot;Megalaima malabarica&quot; = &quot;Psilopogon malabaricus&quot;, &quot;Rhopocichla atriceps&quot; = &quot;Dumetia atriceps&quot;, &quot;Chrysocolaptes lucidus&quot; = &quot;Chrysocolaptes guttacristatus&quot;, &quot;Luscinia brunnea&quot; = &quot;Larvivora brunnea&quot;, &quot;Parus aplonotus&quot; = &quot;Machlolophus aplonotus&quot;, &quot;Turdoides striata&quot; = &quot;Argya striata&quot;, &quot;Zoothera citrina&quot; = &quot;Geokichla citrina&quot;, &quot;Turdoides subrufa&quot; = &quot;Argya subrufa&quot;, &quot;Celeus brachyurus&quot; = &quot;Micropternus brachyurus&quot;, &quot;Muscicapa ruficauda&quot; = &quot;Ficedula ruficauda&quot;, &quot;Bubo nipalensis&quot; = &quot;Ketupa nipalensis&quot;, &quot;Stigmatopelia chinensis&quot; = &quot;Spilopelia chinensis&quot;, &quot;Acrocephalus aedon&quot; = &quot;Arundinax aedon&quot;, &quot;Cyornis pallipes&quot; = &quot;Cyornis pallidipes&quot;, &quot;Megalaima viridis&quot; = &quot;Psilopogon viridis&quot;, &quot;Garrulax delesserti&quot; = &quot;Pterorhinus delesserti&quot;, &quot;Acritillas indica&quot; = &quot;Iole indica&quot;)) vocal_act &lt;- vocal_act %&gt;% left_join(territoriality, by = &quot;scientific_name&quot;) vocal_act &lt;- vocal_act %&gt;% mutate(territory = case_when(territory %in% &quot;1&quot; ~ &quot;Non-territorial&quot;, territory %in% &quot;2&quot; ~ &quot;Weakly territorial&quot;, territory %in% &quot;3&quot; ~ &quot;Highly territorial&quot;)) 9.8 Sociality We prepare sociality as a predictor for the PGLS analysis sociality &lt;- sociality %&gt;% dplyr::select(Species, Communal) colnames(sociality) &lt;- c(&quot;scientific_name&quot;, &quot;sociality&quot;) # Updating the scientific names of following species as per our dataset: see list in the code chunk for Territoriality sociality &lt;- sociality %&gt;% mutate(scientific_name = recode(scientific_name, &quot;Pycnonotus gularis&quot; = &quot;Rubigula gularis&quot;, &quot;Ictinaetus malayensis&quot; = &quot;Ictinaetus malaiensis&quot;, &quot;Dendrocopos nanus&quot; = &quot;Yungipicus nanus&quot;, &quot;Megalaima malabarica&quot; = &quot;Psilopogon malabaricus&quot;, &quot;Rhopocichla atriceps&quot; = &quot;Dumetia atriceps&quot;, &quot;Chrysocolaptes lucidus&quot; = &quot;Chrysocolaptes guttacristatus&quot;, &quot;Luscinia brunnea&quot; = &quot;Larvivora brunnea&quot;, &quot;Parus aplonotus&quot; = &quot;Machlolophus aplonotus&quot;, &quot;Turdoides striata&quot; = &quot;Argya striata&quot;, &quot;Zoothera citrina&quot; = &quot;Geokichla citrina&quot;, &quot;Turdoides subrufa&quot; = &quot;Argya subrufa&quot;, &quot;Celeus brachyurus&quot; = &quot;Micropternus brachyurus&quot;, &quot;Muscicapa ruficauda&quot; = &quot;Ficedula ruficauda&quot;, &quot;Bubo nipalensis&quot; = &quot;Ketupa nipalensis&quot;, &quot;Stigmatopelia chinensis&quot; = &quot;Spilopelia chinensis&quot;, &quot;Acrocephalus aedon&quot; = &quot;Arundinax aedon&quot;, &quot;Cyornis pallipes&quot; = &quot;Cyornis pallidipes&quot;, &quot;Megalaima viridis&quot; = &quot;Psilopogon viridis&quot;, &quot;Garrulax delesserti&quot; = &quot;Pterorhinus delesserti&quot;, &quot;Acritillas indica&quot; = &quot;Iole indica&quot;)) vocal_act &lt;- vocal_act %&gt;% left_join(sociality, by = &quot;scientific_name&quot;) vocal_act &lt;- vocal_act %&gt;% mutate(sociality = case_when(sociality %in% &quot;0&quot; ~ &quot;Non-communal signallers&quot;, sociality %in% &quot;1&quot; ~ &quot;Communal signallers&quot;)) 9.9 Peak frequency We prepare peak frequency as a predictor for the PGLS analysis # add standardized eBird codes to the frequency data freq &lt;- left_join(freq, species_codes[c(3, 5)], by = &quot;species_annotation_codes&quot; ) # Only a total of 99 species are left after filtering species with very few templates nTemplates_5 &lt;- freq %&gt;% group_by(eBird_codes) %&gt;% count() %&gt;% filter(n &gt;= 5) %&gt;% drop_na() # left-join to remove species with less than 10 templates in the frequency dataset freq_5 &lt;- left_join(nTemplates_5[, 1], freq) # calculate median peak frequency after grouping by time of day and species median_pf &lt;- separate(freq_5, col = filename, into = c(&quot;site_id&quot;, &quot;date&quot;, &quot;time&quot;, &quot;splits&quot;), sep = &quot;_&quot;) %&gt;% mutate( time_of_day = case_when( time &gt;= &quot;060000&quot; &amp; time &lt;= &quot;100000&quot; ~ &quot;dawn&quot;, time &gt;= &quot;160000&quot; &amp; time &lt;= &quot;190000&quot; ~ &quot;dusk&quot; ) ) %&gt;% group_by(eBird_codes, time_of_day) %&gt;% summarise(median_peak_freq = median(peak_freq_in_Hz)) ## join the frequency data to the vocal activity data vocal_act &lt;- vocal_act %&gt;% left_join(median_pf, by = c(&quot;eBird_codes&quot;, &quot;time_of_day&quot;)) %&gt;% drop_na() # A total of 66 species were included and three species were excluded from final analysis. 9.10 Foraging guild We prepare foraging guild categories for the PGLS analysis vocal_act &lt;- vocal_act %&gt;% left_join(trait[, c(1, 2, 29)], by = c( &quot;scientific_name&quot;, &quot;common_name&quot; )) ## remove species that are poorly represented by a particular trophic niche ## we get rid of nectarivore species, aquatic predator and granivore vocal_act &lt;- vocal_act %&gt;% filter(trophic_niche != &quot;Aquatic predator&quot;) %&gt;% filter(trophic_niche != &quot;Granivore&quot;) %&gt;% filter(trophic_niche != &quot;Nectarivore&quot;) %&gt;% filter(trophic_niche != &quot;Vertivore&quot;) ## Only 62 species remain at this stage. 9.11 Data cleaning We clean the objects prior to running PGLS regressions # converting the scientific names of vocal_act as per tip.labels of the tree vocal_act &lt;- vocal_act %&gt;% mutate(across(scientific_name, str_replace, &quot; &quot;, &quot;_&quot;)) # converting the scientific names of vocal_act as per the birdtree data so that both are matching vocal_act &lt;- vocal_act %&gt;% mutate( scientific_name = case_when(scientific_name == &quot;Dumetia_atriceps&quot; ~ &quot;Rhopocichla_atriceps&quot;, scientific_name == &quot;Chrysocolaptes_guttacristatus&quot; ~ &quot;Chrysocolaptes_lucidus&quot;, scientific_name == &quot;Turdus_simillimus&quot; ~ &quot;Turdus_merula&quot;, scientific_name == &quot;Larvivora_brunnea&quot; ~ &quot;Luscinia_brunnea&quot;, scientific_name == &quot;Machlolophus_aplonotus&quot; ~ &quot;Parus_xanthogenys&quot;, scientific_name == &quot;Psilopogon_malabaricus&quot; ~ &quot;Megalaima_rubricapillus&quot;, scientific_name == &quot;Tephrodornis_sylvicola&quot; ~ &quot;Tephrodornis_gularis&quot;, scientific_name == &quot;Geokichla_citrina&quot; ~ &quot;Zoothera_citrina&quot;, scientific_name == &quot;Cinnyris_asiaticus&quot; ~ &quot;Nectarinia_asiatica&quot;, scientific_name == &quot;Leptocoma_minima&quot; ~ &quot;Nectarinia_minima&quot;, scientific_name == &quot;Spilopelia_chinensis&quot; ~ &quot;Stigmatopelia_chinensis&quot;, scientific_name == &quot;Argya_subrufa&quot; ~ &quot;Turdoides_subrufa&quot;, scientific_name == &quot;Ficedula_nigrorufa&quot; ~ &quot;Muscicapa_ruficauda&quot;, scientific_name == &quot;Gracula_indica&quot; ~ &quot;Gracula_religiosa&quot;, scientific_name == &quot;Ketupa_nipalensis&quot; ~ &quot;Bubo_nipalensis&quot;, scientific_name == &quot;Hypsipetes_ganeesa&quot; ~ &quot;Hypsipetes_leucocephalus&quot;, scientific_name == &quot;Cyornis_pallidipes&quot; ~ &quot;Cyornis_pallipes&quot;, scientific_name == &quot;Psilopogon_viridis&quot; ~ &quot;Megalaima_viridis&quot;, .default = scientific_name ) ) # final dataframe with variables # check same species in vocal_act and phylogenetic data, and pruning species from the tree which are not present in the vocal_act data diff &lt;- setdiff(tree$tip.label, vocal_act$scientific_name) pruned.tree &lt;- drop.tip(tree, diff) # final phylogenetic dataframe setdiff(vocal_act$scientific_name, pruned.tree$tip.label) # checking if vocal_act and pruned.tree have the same species: result- &#39;character(0)&#39; ## testing for correlations library(psych) for_corr &lt;- vocal_act %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% mutate(median_startTime_z = scale(median_startTime)) %&gt;% mutate(median_peak_freq_z = scale(median_peak_freq)) pairs.panels(for_corr[, c(13:16)]) # Territoriality and sociality are correlated to one another (r = 0.66), so we remove sociality from the multivariate model (see below). 9.12 PGLS analysis Here we test if the higher rates of acoustic detections at dawn can be explained by environmental and/or social factors ## Using normalized detections for dawn only # Univariate models: # percent_normalized_detections ~ median_startTime only model1 &lt;- vocal_act %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% gls(percent_normalized_detections ~ median_startTime, data = ., correlation = corBrownian(1, pruned.tree, form = ~scientific_name) ) summary(model1) # AIC = 497.72 # percent_normalized_detections ~ territoriality only model2 &lt;- vocal_act %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% gls(percent_normalized_detections ~ relevel(factor(territory), ref = &quot;Non-territorial&quot;), data = ., correlation = corBrownian(1, pruned.tree, form = ~scientific_name)) summary(model2) # AIC = 485.27 # percent_normalized_detections ~ median_peak_freq only model3 &lt;- vocal_act %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% gls(percent_normalized_detections ~ scale(median_peak_freq), data = ., correlation = corBrownian(1, pruned.tree, form = ~scientific_name)) summary(model3) # AIC = 497.78 # percent_normalized_detections ~ trophic_niche only model4 &lt;- vocal_act %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% gls(percent_normalized_detections ~ relevel(factor(trophic_niche), ref = &quot;Frugivore&quot;), data = ., correlation = corBrownian(1, pruned.tree, form = ~scientific_name) ) summary(model4) # AIC = 488.58 # Multi-variate model with all predictor variables: data &lt;- vocal_act %&gt;% filter(time_of_day == &quot;dawn&quot;) # adding a reference category for categorical predictors data$territory &lt;- relevel(factor(data$territory), ref = &quot;Non-territorial&quot;) data$sociality &lt;-relevel(factor(data$sociality), ref = &quot;Non-communal signallers&quot;) data$trophic_niche &lt;- relevel(factor(data$trophic_niche), ref = &quot;Frugivore&quot;) # scaling and centering continuous predictors data$scaled_median_startTime &lt;- scale(data$median_startTime) data$scaled_median_peak_freq &lt;- scale(data$median_peak_freq) model5 &lt;- gls( percent_normalized_detections ~ scaled_median_startTime + territory + scaled_median_peak_freq + trophic_niche, data = data, correlation = corBrownian(1, pruned.tree, form = ~scientific_name)) #with sociality removed summary(model5) # AIC = 469.81 anova(model5) # calculation of R2 rr2::R2_lik(model5) #R2 measures how well the model predicts the outcome of the observed data # calculating marginal means terrEff &lt;- emmeans(model5, ~&quot;territory&quot;, data = data) pairs(terrEff) eff_size(terrEff, sigma = sigma(model5), edf = 39) plot(terrEff, comparisons = TRUE) pwpp(terrEff) nicheEff &lt;- emmeans(model5, ~&quot;trophic_niche&quot;, data = data) pairs(nicheEff) eff_size(nicheEff, sigma = sigma(model5), edf = 39) plot(nicheEff, comparisons = TRUE) pwpp(nicheEff) ## visualization pgls_plot &lt;- plot_model(model5, show.values = TRUE, value.offset = 0.3, show.p = TRUE, p.threshold = c(0.07, 0.01, 0.001), order.terms = c(6, 5, 4, 3, 2, 1), axis.labels = c(&quot;Ambient Light (Median time to darkness)&quot;, &quot;Territoriality (Highly territorial)&quot;, &quot;Territoriality (Weakly territorial)&quot;, &quot;Median Peak frequency&quot;, &quot;Foraging guild (Invertivore)&quot;, &quot;Foraging guild (Omnivore)&quot;), title = &quot;&quot;, dot.size = 3, line.size = 1, value.size = 6, type = &quot;std&quot;) + theme_bw() + theme(axis.title = element_text(size = 20, family = &quot;Century Gothic&quot;, face = &quot;bold&quot;), axis.text = element_text(size = 16, family = &quot;Century Gothic&quot;, colour = &quot;black&quot;)) + scale_color_manual(values = c(&quot;#d95f02&quot;, &quot;#1b9e77&quot;)) ## write the standardized coefficient plots to file write.csv(data.frame(pgls_plot[[&quot;data&quot;]]), &quot;results/pgls-standardized-estimates.csv&quot;) ggsave(pgls_plot, filename = &quot;figs/fig_pgls.svg&quot;, width = 15, height = 9, device = svg(), units = &quot;in&quot;, dpi = 300) dev.off() ## Territoriality (Highly territorial compared to Non-territorial) show a significant positive association with percent_normalized_detections. Trophic guild (Omnivores compared to Frugivores) show a marginally significant positive association with percent_normalized_detections. ## Here we will run a model using dusk data anyway model5 &lt;- vocal_act %&gt;% filter(time_of_day == &quot;dusk&quot;) %&gt;% gls( percent_normalized_detections ~ scale(median_startTime) + relevel(factor(territory), ref = &quot;Non-territorial&quot;) + relevel(factor(sociality), ref = &quot;Non-communal signallers&quot;) + scale(median_peak_freq) + relevel(factor(trophic_niche), ref = &quot;Frugivore&quot;), data = ., correlation = corBrownian(1, pruned.tree, form = ~scientific_name) ) summary(model6) plot_model(model6, type = &quot;std&quot;) ## No significant association was detected between dusk data and any environmental/social factors (when controlled for phylogeny). "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
